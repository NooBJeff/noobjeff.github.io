<?xml version="1.0" encoding="utf-8"?><feed xmlns="http://www.w3.org/2005/Atom" ><generator uri="https://jekyllrb.com/" version="3.4.3">Jekyll</generator><link href="https://thissentenceiswrong.github.io/feed.xml" rel="self" type="application/atom+xml" /><link href="https://thissentenceiswrong.github.io/" rel="alternate" type="text/html" /><updated>2017-05-27T13:13:49+08:00</updated><id>https://thissentenceiswrong.github.io/</id><title type="html">并学不到东西的博客</title><subtitle>分享编程经验，生活琐事
</subtitle><entry><title type="html">从零编写实时渲染器-0</title><link href="https://thissentenceiswrong.github.io/2017/05/27/%E4%BB%8E%E9%9B%B6%E7%BC%96%E5%86%99%E5%AE%9E%E6%97%B6%E6%B8%B2%E6%9F%93%E5%99%A8-0.html" rel="alternate" type="text/html" title="从零编写实时渲染器-0" /><published>2017-05-27T00:00:00+08:00</published><updated>2017-05-27T00:00:00+08:00</updated><id>https://thissentenceiswrong.github.io/2017/05/27/%E4%BB%8E%E9%9B%B6%E7%BC%96%E5%86%99%E5%AE%9E%E6%97%B6%E6%B8%B2%E6%9F%93%E5%99%A8-0</id><content type="html" xml:base="https://thissentenceiswrong.github.io/2017/05/27/%E4%BB%8E%E9%9B%B6%E7%BC%96%E5%86%99%E5%AE%9E%E6%97%B6%E6%B8%B2%E6%9F%93%E5%99%A8-0.html">&lt;p&gt;为了兴趣爱好，为了提高技术，为了申请大学有目标，为了简历好看。&lt;/p&gt;

&lt;hr /&gt;

&lt;p&gt;本套博客记录编写计算机图形学下的实时软件渲染器。&lt;/p&gt;

&lt;p&gt;我的编程学习过程谈不上努力刻苦，因此在写代码的过程中肯定会有很多问题，欢迎各位读者到&lt;a href=&quot;https://github.com/thissentenceiswrong/Renderer/&quot;&gt;GitHub的本Repo&lt;/a&gt;中提出Issue什么的 :)&lt;/p&gt;

&lt;hr /&gt;

&lt;h2 id=&quot;准备工作&quot;&gt;准备工作&lt;/h2&gt;

&lt;ol&gt;
  &lt;li&gt;
    &lt;p&gt;下载我们用于学习的教材 &lt;a href=&quot;https://www.dropbox.com/s/u1ordkpm2g4v74l/Fundamentals%20of%20Computer%20Graphics.pdf?dl=0&quot;&gt;《Fundamentals of Computer Graphics》&lt;/a&gt; (第三版， pdf 格式，英文原版)&lt;/p&gt;

    &lt;blockquote&gt;
      &lt;ul&gt;
        &lt;li&gt;链接指向 Dropbox，请自备翻墙。&lt;/li&gt;
        &lt;li&gt;很抱歉这是英文版的，因为我找不到中文版啊啊啊。如果各位谁有中文版的话，一定要贡献出来啊！英文看的咪咪痛&lt;/li&gt;
        &lt;li&gt;&lt;del&gt;本文件仅用于学习目的，请于下载后24小时内自行删除Blah Blah Blah&lt;/del&gt;&lt;/li&gt;
      &lt;/ul&gt;
    &lt;/blockquote&gt;
  &lt;/li&gt;
  &lt;li&gt;
    &lt;p&gt;&lt;a href=&quot;https://www.visualstudio.com/zh-hans/downloads/&quot;&gt;下载 Visual Studio 2017&lt;/a&gt; 。写渲染器这种大型一点的项目，不用IDE会比较难受。&lt;/p&gt;
  &lt;/li&gt;
  &lt;li&gt;
    &lt;p&gt;获取我的Repo或者用 VS2017 创建 &lt;strong&gt;C++  的 Win32 项目&lt;/strong&gt;（不是Win32 控制台应用程序）&lt;/p&gt;
  &lt;/li&gt;
&lt;/ol&gt;

&lt;h2 id=&quot;项目简介&quot;&gt;项目简介&lt;/h2&gt;

&lt;p&gt;我的目标是在暑假结束前写出简单的，具有基本明暗效果的渲染器，可以用来查看.obj格式的三维模型。这个软件基本的功能为载入模型，围绕模型移动镜头。其他任何功能都先不管，只注重渲染这一部分。&lt;/p&gt;

&lt;p&gt;下面是具体一点的参数&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;操作系统：Windows（因为需要创建GUI而又不想去学跨平台的GUI库，所以就只能Window“独占”了）&lt;/li&gt;
  &lt;li&gt;编程语言：C++ （然而由于本人的编程水平，恐怕会写成C with Class）&lt;/li&gt;
  &lt;li&gt;GUI库：Win32 API（最底层的那一套，其实应该用Qt的，但是目前不想去学那个）&lt;/li&gt;
  &lt;li&gt;线性代数库：由于渲染过程涉及到大量的数学计算，因此需要一个好的数学库。不建议自己造轮子，性能什么的肯定不行。具体用什么第三方库还没找好。&lt;/li&gt;
&lt;/ul&gt;

&lt;h2 id=&quot;创建程序入口函数main&quot;&gt;创建程序入口函数main&lt;/h2&gt;

&lt;p&gt;今天时间还有的多，创建好VS2017项目后可以再写点代码，争取把基础框架搭起来。&lt;/p&gt;

&lt;p&gt;创建main.cpp，这就是整个程序的入口函数main所在地了。&lt;/p&gt;

&lt;p&gt;代码如下：&lt;/p&gt;

&lt;p&gt;main.cpp:&lt;/p&gt;

&lt;div class=&quot;language-c++ highlighter-rouge&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;cp&quot;&gt;#include &amp;lt;Windows.h&amp;gt;
&lt;/span&gt;
&lt;span class=&quot;cp&quot;&gt;#define WIN32_LEAN_AND_MEAN
&lt;/span&gt;
&lt;span class=&quot;kt&quot;&gt;int&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;WINAPI&lt;/span&gt; &lt;span class=&quot;nf&quot;&gt;WinMain&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;HINSTANCE&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;hInstance&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;HINSTANCE&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;hPreinstance&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;LPSTR&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;lpCmd&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;kt&quot;&gt;int&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;nShowCmd&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
    &lt;span class=&quot;c1&quot;&gt;// 尝试 cout 输出到控制台是没有用的，因为根本就没控制台给你输出了= =
&lt;/span&gt;    &lt;span class=&quot;c1&quot;&gt;// 这算是具有窗口的图形界面程序了
&lt;/span&gt;    &lt;span class=&quot;c1&quot;&gt;// 不过还没有代码创建窗口，所以程序运行后什么都不会发生
&lt;/span&gt;    &lt;span class=&quot;k&quot;&gt;return&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;0&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
&lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;

&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;

&lt;p&gt;和普通的控制台程序看起来是不是有点不太一样？不要慌，代码中那些参数具体是什么意思，我也不懂，反正也用不上(￣、￣)&lt;/p&gt;

&lt;p&gt;有兴趣查看他们的具体意思的话，可以去&lt;a href=&quot;https://msdn.microsoft.com/zh-cn/library/windows/desktop/ff818516(v=vs.85).aspx&quot;&gt;MSDN&lt;/a&gt;搜索。&lt;/p&gt;

&lt;p&gt;由于通过Windows API与操作系统进行交互并非本程序的主要目的，所以完全没有必要浪费太多时间学习这些既底层，又不实用的API。编写过程中需要使用的话，我都会说明一下的。&lt;/p&gt;

&lt;p&gt;如果使用的是较老的VS，那么文件的默认编码一般不是UTF-8。如果代码中有中文处理起来会比较费事，建议在菜单栏的 &lt;code class=&quot;highlighter-rouge&quot;&gt;文件-&amp;gt;高级保存选项&lt;/code&gt;中选择UTF-8不带签名格式保存。而新版的VS 2017似乎会在检测到Unicode字符后提示用户用UTF-8保存，因此应该不用手动设置文件格式。&lt;/p&gt;

&lt;hr /&gt;

&lt;p&gt;今天就到这吧，搭建程序基本框架什么的，鸽了鸽了，午休午休&lt;/p&gt;

&lt;p&gt;( ´･･)ﾉ(._.`)&lt;/p&gt;

&lt;p&gt;更多信息可查看Repo下的&lt;a href=&quot;README.md&quot;&gt;README.md&lt;/a&gt;&lt;/p&gt;</content><author><name></name></author><summary type="html">为了兴趣爱好，为了提高技术，为了申请大学有目标，为了简历好看。</summary></entry><entry><title type="html">Jeff已经很累了</title><link href="https://thissentenceiswrong.github.io/2017/05/24/Jeff%E5%B7%B2%E7%BB%8F%E5%BE%88%E7%B4%AF%E4%BA%86.html" rel="alternate" type="text/html" title="Jeff已经很累了" /><published>2017-05-24T00:00:00+08:00</published><updated>2017-05-24T00:00:00+08:00</updated><id>https://thissentenceiswrong.github.io/2017/05/24/Jeff%E5%B7%B2%E7%BB%8F%E5%BE%88%E7%B4%AF%E4%BA%86</id><content type="html" xml:base="https://thissentenceiswrong.github.io/2017/05/24/Jeff%E5%B7%B2%E7%BB%8F%E5%BE%88%E7%B4%AF%E4%BA%86.html">&lt;p&gt;和大学同学出去玩，感觉和他们除了与自己相关的话题，其他什么都不想说。这病态的心理。    &lt;/p&gt;

&lt;p&gt;我总感觉我疯狂地想提高自己，不是对自己直接有益的东西都不想讨论。但是这种行为肯定是错误的，我很奇怪自己从哪里搞来的这种心态，实在不利于正常人际关系。&lt;/p&gt;

&lt;p&gt;然而，虽然我跟人说话不屑于谈论非有益的东西（这种行为是极端错误的），我自己又不热衷于钻研技术，也根本没有坚持学习。上班的时候，各种划水，效率低下，以最低要求完成任务；下班回宿舍，也不可能学习，打开 Steam 一天就又过去了。很烦。&lt;/p&gt;

&lt;p&gt;工作真的很恐怖，一天的工作之后，你的心中一直有一个声音在说：“工作一天已经够努力了，晚上就别学习，打开电脑玩吧！”。这个声音相当难以抗拒，以至于我明明还要准备GRE，明明有无数的单词要背，有报告要写，有这样那样的有益自己的未来的事要完成，我都能无情的丢到脑后，然后将一晚上沉溺在电子游戏当中，只为获得那短暂廉价且对自己毫无帮助的快感–这个过程中我甚至都不快乐。&lt;/p&gt;

&lt;p&gt;当然我知道这根本不是工作的问题，我实习时的条件已经远远超出其他的同类了——没有工资压力，没有晋升压力，没有贡献的压力。我只是极度缺乏毅力，或自制力，或其他什么类似的精力。&lt;/p&gt;

&lt;p&gt;而且在这里我也没有共同语言，我甚至不想和同事说话，我还非常自负的认为自己出国了比身边的人都要牛逼，这些负面且错误的想法充满了我的思维，我知道他们是错的，可我无法摆脱他们，我要疯了。&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;说实话，我不知道我为了什么而玩游戏，但是我就是停不下来。我要疯了。&lt;/strong&gt;&lt;/p&gt;</content><author><name></name></author><summary type="html">和大学同学出去玩，感觉和他们除了与自己相关的话题，其他什么都不想说。这病态的心理。    </summary></entry><entry><title type="html">nginx 全家桶配置过程易踩坑的点</title><link href="https://thissentenceiswrong.github.io/2017/05/18/nginx%E5%8F%8Aphp-fpm%E9%85%8D%E7%BD%AE%E6%96%B9%E6%B3%95.html" rel="alternate" type="text/html" title="nginx 全家桶配置过程易踩坑的点" /><published>2017-05-18T00:00:00+08:00</published><updated>2017-05-18T00:00:00+08:00</updated><id>https://thissentenceiswrong.github.io/2017/05/18/nginx%E5%8F%8Aphp-fpm%E9%85%8D%E7%BD%AE%E6%96%B9%E6%B3%95</id><content type="html" xml:base="https://thissentenceiswrong.github.io/2017/05/18/nginx%E5%8F%8Aphp-fpm%E9%85%8D%E7%BD%AE%E6%96%B9%E6%B3%95.html">&lt;p&gt;&lt;em&gt;本人知识有限，如有错误还请指出，不过Github Page没法留言…&lt;/em&gt;&lt;/p&gt;

&lt;h2 id=&quot;linux-我tm错爆&quot;&gt;Linux: 我TM错爆&lt;/h2&gt;

&lt;p&gt;昨天和今天都花在了配置服务器环境上。为了装个nginx+php+mysql我特么竟然卡了2天（忘了用lnmp全家桶）。&lt;/p&gt;

&lt;p&gt;服务器运行的是CentOS7，首先为yum添加remi repo，下载php，nginx等软件。这一步花的时间不多。&lt;/p&gt;

&lt;p&gt;软件都下好了便开始痛苦的配置了。。。&lt;/p&gt;

&lt;h2 id=&quot;nginx&quot;&gt;nginx&lt;/h2&gt;
&lt;p&gt;以前用的都是Apache，因此这次是我第一次配置nginx，很痛苦。&lt;br /&gt;
首先创建专门的用户及用户组www www，设置好 Document Root 的所属用户及权限，设置好 nginx 进程运行的用户。设置完这些应该就差不多了。我便打开浏览器一看：&lt;/p&gt;

&lt;h4 id=&quot;403-forbidden&quot;&gt;403 Forbidden&lt;/h4&gt;

&lt;p&gt;百度谷歌了一下午加一晚上。最后终于发现，是一个叫什么 SELinux 原因。最最讽刺的是，这个解决方法来自于 StackOverflow 上搜索&lt;code class=&quot;highlighter-rouge&quot;&gt;nginx 403&lt;/code&gt;&lt;a href=&quot;http://stackoverflow.com/questions/6795350/nginx-403-forbidden-for-all-files&quot;&gt;第一个提问的第二个回答&lt;/a&gt;。所以这本该是一次快速地查找答案并修复的过程，最后花了我两天。&lt;/p&gt;

&lt;p&gt;下次有问题一定先查 StackOverflow&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;https://thissentenceiswrong.github.io/assets/copy-from-stackoverflow.jpg&quot; alt=&quot;面向搜索引擎编程&quot; /&gt;&lt;/p&gt;

&lt;h2 id=&quot;php-fpm&quot;&gt;php-fpm&lt;/h2&gt;

&lt;h4 id=&quot;blank-page&quot;&gt;blank page&lt;/h4&gt;

&lt;p&gt;解决完nginx 403 的问题，我心中一阵舒爽，以为前方的道路已经通畅，胜利就在不远方。然而，本该配置好的php又出了问题&lt;/p&gt;

&lt;p&gt;似乎现在php运行的工作都用一个叫 php-fpm 的东西来进行类似进程管理的调度。于是我也用了这么个东西，但是运行的时候，在浏览器访问php页面，得到的结果永远是一个空白页面，什么都没有，status code却是正常的200。这就很奇怪。于是又百度谷歌爆栈搜索半天，发现是nginx的配置文件没有&lt;code class=&quot;highlighter-rouge&quot;&gt;include fastcgi_params&lt;/code&gt;，遂加上。果然，不再是空白页面了–是更恼人的&lt;/p&gt;

&lt;h4 id=&quot;php-permission-denied&quot;&gt;php Permission Denied&lt;/h4&gt;

&lt;p&gt;既然是权限问题，那我就去查看各个文件的用户及权限是否正确。我发现问题出在php-fpm 进程的运行用户上，似乎php-fpm 的默认运行用户是Apache，于是我打开php-fpm.conf，像nginx.conf里一样加上 &lt;code class=&quot;highlighter-rouge&quot;&gt;user=www&lt;/code&gt;。保存退出，重新运行php-fpm，居然 TMD 报错了，不认 user 这个配置选项。那我要 TM 怎么改你的运行用户？&lt;/p&gt;

&lt;p&gt;于是又百度谷歌爆栈搜索了半天，终于发现配置用户需要到另一个文件 &lt;code class=&quot;highlighter-rouge&quot;&gt;www.conf&lt;/code&gt;里去设置，我的天啊，连 php 的官方 manual 上都写的是往 php-fpm.conf 里加 user（&lt;a href=&quot;http://php.net/manual/en/install.fpm.configuration.php&quot;&gt;点此有真相&lt;/a&gt; ）。这解决方法谁能料得到，坑，太坑了。&lt;/p&gt;

&lt;p&gt;于是又双叒叕配置了 php-fpm 的运行用户为www，重启，进网页，ok，终于能看到内容了：&lt;/p&gt;

&lt;h2 id=&quot;mysql&quot;&gt;MySQL&lt;/h2&gt;

&lt;h4 id=&quot;could-not-found-driver&quot;&gt;Could not found driver&lt;/h4&gt;

&lt;p&gt;这个问题是在php代码中使用PDO的时候出现的，问题比较简单：没装PDO，装上php的mysql插件就好了。&lt;/p&gt;

&lt;p&gt;好嘛，都解决到最后一环：数据库了。只要数据库调通，这整个网站也就基本能用了。但是。。。。。&lt;/p&gt;

&lt;h4 id=&quot;access-denied-for-user-xxxlocalhost-using-password-yes&quot;&gt;Access denied for user ‘xxx’@’localhost’ (using password: YES)&lt;/h4&gt;

&lt;p&gt;&lt;em&gt;去你妈的权限问题&lt;/em&gt;&lt;/p&gt;

&lt;p&gt;&lt;del&gt;权限权限权限，我感觉自己遇到的问题中70%都和Linux的权限设置有关。&lt;/del&gt;&lt;/p&gt;

&lt;p&gt;哦等一下，黑错了，这里是MySQL的用户权限问题，这锅Linux不背。。。&lt;/p&gt;

&lt;p&gt;还是从头讲一下我认为的MySQL用户权限方面的通常解决方法吧。&lt;/p&gt;

&lt;blockquote&gt;
  &lt;p&gt;select * from mysql.user;&lt;/p&gt;

  &lt;p&gt;可查看用户信息及权限&lt;/p&gt;
&lt;/blockquote&gt;

&lt;p&gt;首先删掉 mysql.user 表中的无名用户&lt;code class=&quot;highlighter-rouge&quot;&gt;''&lt;/code&gt;，因为在某些情况下这个无名用户可能造成困扰，而且他似乎也没什么用，先删了省得后面出问题。&lt;/p&gt;

&lt;p&gt;接下来创建用户，并用 GRANT 语句赋予该用户在某些数据库上的某些权限，GRANT 语句中的 TO 的对象可以是’username’@’localhost’或者@’%’，localhost限定用户只能本地访问数据库，% 可允许外网访问。&lt;/p&gt;

&lt;p&gt;但是我这边用 GRANT 加 &lt;code class=&quot;highlighter-rouge&quot;&gt;FLUSH PRIVILEGES&lt;/code&gt; 并不管用，用户的权限并没有更新。所以我选择手动更新 mysql.user 表中的权限，修改完后发现终于一切都正常了（至少表面上是这样）。&lt;/p&gt;

&lt;p&gt;至此nginx + php + mysql 终于都配置好了，聊天室应用也得以正常的运行。于是我打开浏览器开始实际测试应用的各个功能是否能够正常的运行。&lt;/p&gt;

&lt;p&gt;万万没想到，还是有坑。&lt;/p&gt;

&lt;h4 id=&quot;permission-denied&quot;&gt;Permission Denied&lt;/h4&gt;

&lt;p&gt;&lt;em&gt;TMD 怎么又是权限问题？&lt;/em&gt;&lt;/p&gt;

&lt;p&gt;这个问题出在图片上传这个功能上。&lt;/p&gt;

&lt;p&gt;当我网页上用 uploadify 进行图片上传的时候，服务器一直响应 500 内部错误。但是这个功能代码上肯定是没问题的，因为在测试服务器上运行的时候一切正常。&lt;/p&gt;

&lt;p&gt;遂查看 nginx 及 php 的 error log，具体忘了是哪个log了，总之log里写的是“处理post（上传图片）请求时，往xxxx文件夹写入失败”。查了一下，似乎HTTP POST 请求内容较大的时候，服务器会创建缓存保存POST相关内容，但是如果没有创建缓存的文件夹的相应权限，那自然就失败报错 500 了。于是我又 &lt;code class=&quot;highlighter-rouge&quot;&gt;chown www:www /path/to/cache&lt;/code&gt;，再次测试，终于，终于好了。&lt;/p&gt;

&lt;hr /&gt;

&lt;p&gt;讲道理我们这一行重在总结经验教训，可我从没养成写blog的习惯，从小文字表达能力也不好，因此我的博文可能非常“不堪入目”。但我会尽力把这个工作坚持下去，因为这东西确实有用。其实 MySQL 权限问题我上班第一周就遇到过了，如果那个时候我能写下来，现在说不定还能少点麻烦。&lt;/p&gt;

&lt;p&gt;也欢迎大家继续关注我的博客，实习这么久总会学到点什么的，我一定分享。&lt;/p&gt;</content><author><name></name></author><summary type="html">本人知识有限，如有错误还请指出，不过Github Page没法留言…</summary></entry><entry><title type="html">配置服务器还是这么蛋疼</title><link href="https://thissentenceiswrong.github.io/2017/05/17/%E7%97%9B%E8%8B%A6%E7%9A%84%E9%85%8D%E7%BD%AE%E6%9C%8D%E5%8A%A1%E5%99%A8.html" rel="alternate" type="text/html" title="配置服务器还是这么蛋疼" /><published>2017-05-17T00:00:00+08:00</published><updated>2017-05-17T00:00:00+08:00</updated><id>https://thissentenceiswrong.github.io/2017/05/17/%E7%97%9B%E8%8B%A6%E7%9A%84%E9%85%8D%E7%BD%AE%E6%9C%8D%E5%8A%A1%E5%99%A8</id><content type="html" xml:base="https://thissentenceiswrong.github.io/2017/05/17/%E7%97%9B%E8%8B%A6%E7%9A%84%E9%85%8D%E7%BD%AE%E6%9C%8D%E5%8A%A1%E5%99%A8.html">&lt;p&gt;今天的任务是配好新的服务器环境，并将之前的聊天室项目部署上去。&lt;/p&gt;

&lt;p&gt;接触Linux这么久了，每次干这种配环境的事情，仍然要头疼一天。&lt;/p&gt;

&lt;p&gt;安装软件源，安装软件及运行环境，配置服务器，PHP，MySQL，添加配置用户及权限。&lt;/p&gt;

&lt;p&gt;这次的系统是CentOS7，之前只用过Ubuntu，因此十分不熟悉，不过还好网上的现成教程够多，安装软件配置环境什么的 ctrl C+V 还能坚持。但是安装好nginx开始配置服务器的时候，噩梦开始了。&lt;/p&gt;

&lt;h2 id=&quot;http-403-forbidden&quot;&gt;HTTP 403 Forbidden&lt;/h2&gt;

&lt;p&gt;&lt;em&gt;Permission Deny,Permission Deny,Permission Deny,Permission Deny…&lt;/em&gt;&lt;/p&gt;

&lt;p&gt;​															— error.log&lt;/p&gt;

&lt;p&gt;其实在刚刚设置好nginx的文件root的时候，我是心里有底的：现在访问肯定是各种报错，因为Linux这种东西权限没配置好分分钟就能让你崩溃。&lt;/p&gt;

&lt;p&gt;但是当我创建www用户及用户组，设置nginx以www用户运行，chown所有网站文件为www:www，chmod 775（这个当然可以更细致，但是暂时懒得那么做）之后，浏览器依然坚持不懈报错403的时候，我TM就疯了。又是哪里出了错？&lt;/p&gt;

&lt;p&gt;遂查看error log，错误信息从没变过，一直是获取index的时候permission denied, 但是我在nginx里设置好了&lt;code class=&quot;highlighter-rouge&quot;&gt;index index.html index.php&lt;/code&gt;这种的，文件root目录下也有index，我看了下PHP，安装也是正确的，能够使用（写这篇文章的时候想起来，我没有测试nginx能不能正常使用php，但是就算不能的话报错也不应该是403吧，明天添加一个 index.html 看看是不是php的问题（应该不是，因为我试过访问root子目录下的资源文件，仍然是403错误））。我TM就绝望了，以我浅薄的经验，我不知道还能哪里有问题。热情的百度谷歌也未能帮我找出问题所在。&lt;/p&gt;

&lt;p&gt;于是我把所有设置都调回root账号权限，服务器使用root账号运行，文件权限root:root 777，再打开浏览器，oh hell，403永不为奴。我TM就关电脑打卡下班回宿舍，连每日报告都没心情写了。&lt;/p&gt;

&lt;hr /&gt;

&lt;p&gt;现在一想到明天还要面对这个问题，心里就一拧。他娘的到底是哪里有问题？哪里的权限设置出了问题？？？&lt;/p&gt;</content><author><name></name></author><summary type="html">今天的任务是配好新的服务器环境，并将之前的聊天室项目部署上去。</summary></entry><entry><title type="html">实习项目小结</title><link href="https://thissentenceiswrong.github.io/2017/05/16/%E5%AE%9E%E4%B9%A0%E9%A1%B9%E7%9B%AE%E5%B0%8F%E7%BB%93.html" rel="alternate" type="text/html" title="实习项目小结" /><published>2017-05-16T00:00:00+08:00</published><updated>2017-05-16T00:00:00+08:00</updated><id>https://thissentenceiswrong.github.io/2017/05/16/%E5%AE%9E%E4%B9%A0%E9%A1%B9%E7%9B%AE%E5%B0%8F%E7%BB%93</id><content type="html" xml:base="https://thissentenceiswrong.github.io/2017/05/16/%E5%AE%9E%E4%B9%A0%E9%A1%B9%E7%9B%AE%E5%B0%8F%E7%BB%93.html">&lt;p&gt;已经实习了一个多月了，期间就接触了两个项目：第一个项目是替换一下老旧的API，工作量比较少因此一周内就完成了；第二个项目目前还在做，大概是要完成一个聊天室的东西。&lt;/p&gt;

&lt;p&gt;其实我这的实习真的没有想象的那么好，我感觉自己就是个接盘侠。。。因为组里其他人不会用PHP，所以头头就把以前的老旧PHP项目丢给我来修整。面对这些没有文档没有完善注释、服役年龄比我学习编程时间还长的项目，我是xx的：光是从零开始读代码理解项目各个功能、工作流程、框架作用就要花上好几天——因为根本没有文档说明，只能去代码堆里找答案。&lt;/p&gt;

&lt;p&gt;就拿第二个项目来说吧。这是一个类似网络聊天室的东西，被拿来用作我公司网站的在线客服服务。拿到手上研究后发现，网站部分使用ThinkPHP3.2，实时信息交换部分使用GatewayWorker；前者使用MySQL作为数据库，后者使用Redis作为缓存。&lt;/p&gt;

&lt;p&gt;上面的四个框架/应用，我就用过一个MySQL，因此项目进行过程中总是少不了疯狂的查gu阅ge各文档、教程。&lt;/p&gt;

&lt;p&gt;理解了项目结构以后，就可以开始修改代码实现要求了。其中由于原来的前端代码过于飘逸，我怕理解的时间还不如重新写一份，因此被我全部推倒进行了重构（现在来看，绝对绝对不要随意重构，特别仅仅是因为你看不太懂以前的代码的时候。。。）。那原来的代码有多飘逸呢，首先，聊天室说大不大说小不小的这么一个程序，从头到尾他只有一个类：IMClient。所有的消息处理，按键响应等等等等全在这里。什么MVC，不存在的。因此代码的高度耦合导致极低的代码可读性，但是仅仅是只有一个类就算了，类中一些关键回调函数，比如消息响应的回调，原作者出于兼容性的考虑（原应用针对手机端、电脑端、普通用户登录、客服用户登录的不同情况均有不同的响应页面），这些回调函数均由各个html页面内的script标签的代码分别传入，也就是说，代码的具体实现各个文件都不同，有点像虚基类和其子类的关系。要同时维护这么多份相似功能的代码显然不太现实，而且由于JS的灵活性，阅读代码的时候也不好找到被传入的回调函数。当时我理解代码的时候很痛苦，为了理解某个功能是如何实现的，只得在不同文件间跳来跳去，希望抓住那回调函数的身影。。。（其实这个时候chrome开发者工具真的超好用，显示信息很详细）&lt;/p&gt;

&lt;p&gt;在重构的过程中遇到了不少工程架构上的问题，下期再讲。。先睡了&lt;/p&gt;</content><author><name></name></author><summary type="html">已经实习了一个多月了，期间就接触了两个项目：第一个项目是替换一下老旧的API，工作量比较少因此一周内就完成了；第二个项目目前还在做，大概是要完成一个聊天室的东西。</summary></entry><entry><title type="html">说说实习的前端项目</title><link href="https://thissentenceiswrong.github.io/2017/05/16/%E5%AE%9E%E4%B9%A0%E5%B0%8F%E7%BB%932.html" rel="alternate" type="text/html" title="说说实习的前端项目" /><published>2017-05-16T00:00:00+08:00</published><updated>2017-05-16T00:00:00+08:00</updated><id>https://thissentenceiswrong.github.io/2017/05/16/%E5%AE%9E%E4%B9%A0%E5%B0%8F%E7%BB%932</id><content type="html" xml:base="https://thissentenceiswrong.github.io/2017/05/16/%E5%AE%9E%E4%B9%A0%E5%B0%8F%E7%BB%932.html">&lt;p&gt;​	昨天说到，我决定重构这个聊天室项目的前端代码。因为我在UCC做大作业的时候干过类似的前端项目，所以我觉得这次应该也会比较简单。
​	确实，不就是个聊天室嘛，可以想象最麻烦的地方不过就是处理与服务器间的各种消息通信了。而且这个东西以发送文字为主，图片表情什么的不存在的，页面上不需要太多的其他功能。
​	一开始的进度是比较快的，很多功能直接从大作业搬来用，代码结构也不要费脑子重新设计。但是渐渐的我发现这代码越写越不优雅了，问题主要出在保持渲染的页面与数据一致这方面。
​	JavaScript是一门相当灵活的语言，而到处都是的回调函数也是这门语言的特色。我们浏览网页的时候，很多信息的获取都是异步的，你不知道信息什么时候到，因此你没办法傻等着。一般是先创建页面提示载入中，然后在信息获取到后替换掉原先的载入页面。我在做这个聊天室的时候面对这种问题处理的不是很好，几乎还是在用顺序执行的理念来做，根本不考虑异步的特性。
​	这让我想起以前接触过的一个框架&lt;em&gt;Meteor&lt;/em&gt;，当时用的时候没觉得这个全自动同步数据及渲染的东西有多实用，现在才发现他解决的问题是何等重要且常见的。我有空回去读一读他的源代码，看看是如何实现这种同步的。&lt;/p&gt;</content><author><name></name></author><summary type="html">​ 昨天说到，我决定重构这个聊天室项目的前端代码。因为我在UCC做大作业的时候干过类似的前端项目，所以我觉得这次应该也会比较简单。 ​ 确实，不就是个聊天室嘛，可以想象最麻烦的地方不过就是处理与服务器间的各种消息通信了。而且这个东西以发送文字为主，图片表情什么的不存在的，页面上不需要太多的其他功能。 ​ 一开始的进度是比较快的，很多功能直接从大作业搬来用，代码结构也不要费脑子重新设计。但是渐渐的我发现这代码越写越不优雅了，问题主要出在保持渲染的页面与数据一致这方面。 ​ JavaScript是一门相当灵活的语言，而到处都是的回调函数也是这门语言的特色。我们浏览网页的时候，很多信息的获取都是异步的，你不知道信息什么时候到，因此你没办法傻等着。一般是先创建页面提示载入中，然后在信息获取到后替换掉原先的载入页面。我在做这个聊天室的时候面对这种问题处理的不是很好，几乎还是在用顺序执行的理念来做，根本不考虑异步的特性。 ​ 这让我想起以前接触过的一个框架Meteor，当时用的时候没觉得这个全自动同步数据及渲染的东西有多实用，现在才发现他解决的问题是何等重要且常见的。我有空回去读一读他的源代码，看看是如何实现这种同步的。</summary></entry><entry><title type="html">Hello World</title><link href="https://thissentenceiswrong.github.io/2017/05/05/welcome-to-jekyll.html" rel="alternate" type="text/html" title="Hello World" /><published>2017-05-05T00:00:00+08:00</published><updated>2017-05-05T00:00:00+08:00</updated><id>https://thissentenceiswrong.github.io/2017/05/05/welcome-to-jekyll</id><content type="html" xml:base="https://thissentenceiswrong.github.io/2017/05/05/welcome-to-jekyll.html">&lt;p&gt;Hello World!&lt;/p&gt;</content><author><name></name></author><summary type="html">Hello World!</summary></entry><entry><title type="html">PHP 使用 String</title><link href="https://thissentenceiswrong.github.io/2017/05/05/PHP-%E4%BD%BF%E7%94%A8-String.html" rel="alternate" type="text/html" title="PHP 使用 String" /><published>2017-05-05T00:00:00+08:00</published><updated>2017-05-05T00:00:00+08:00</updated><id>https://thissentenceiswrong.github.io/2017/05/05/PHP-%E4%BD%BF%E7%94%A8-String</id><content type="html" xml:base="https://thissentenceiswrong.github.io/2017/05/05/PHP-%E4%BD%BF%E7%94%A8-String.html">&lt;p&gt;本来并不打算做服务器后台方面的事，没想到实习一不小心就被丢了一坨有关网站服务器的工作，PHP变成了天天对着发呆的东西。。。&lt;/p&gt;

&lt;p&gt;由于并没有系统自学过PHP这门语言，因此很多编程经验我都直接照搬其他语言的，比如字符串。&lt;/p&gt;

&lt;p&gt;我一直默认 PHP 中的字符串和 JavaScript 的差不多，即单双引号都可以表示字符串，且这两种表示方法没有区别。比如：&lt;/p&gt;

&lt;div class=&quot;language-javascript highlighter-rouge&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;s2&quot;&gt;&quot;Hello World!\nI'm Jeff.&quot;&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;===&lt;/span&gt; &lt;span class=&quot;s1&quot;&gt;'Hello World!\nI\'m Jeff.'&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;

&lt;p&gt;为了演示转义字符的使用，结果看起来有点丑。但是表达的东西是一样的。&lt;/p&gt;

&lt;p&gt;结果PHP的字符串并不一样，并且有三种字符串的表达，让人不禁想起孔乙己：“茴字的四种写法你知道么”。不过这三种方式各有使用场景，因此了解一下其实非常有帮助。&lt;/p&gt;

&lt;h5 id=&quot;1-单引号表示&quot;&gt;1. 单引号表示&lt;/h5&gt;
&lt;p&gt;单引号表示下规则最简单，不对字符串中进行任何转义，仅转义&lt;code class=&quot;highlighter-rouge&quot;&gt;\'&lt;/code&gt;转义符。&lt;/p&gt;

&lt;h5 id=&quot;2-双引号表示&quot;&gt;2. 双引号表示&lt;/h5&gt;
&lt;p&gt;双引号表示的规则是我们所熟知的，可以使用转义，可以放 php 变量。&lt;/p&gt;

&lt;h5 id=&quot;3-heredoc表示&quot;&gt;3. HereDoc表示&lt;/h5&gt;
&lt;p&gt;这个我是第一次听说，有点像 Python 中的 String Doc。这个不用给单引号或双引号加转义，需要用PHP处理大段纯文本的使用是很方便的。用来输出HTML应该也会很方便，等会我就去把项目里都换上这个试试。&lt;/p&gt;

&lt;hr /&gt;

&lt;p&gt;三种方法的样例如下：&lt;/p&gt;
&lt;div class=&quot;language-php highlighter-rouge&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;$var = 233;
// 单引号，不支持转义
echo 'Hello\' World! \n $var';

echo &quot;\n------\n&quot;;

// 双引号，支持所有转义
echo &quot;Hello\&quot; World! \n $var&quot;;

echo &quot;\n------\n&quot;;

// HereDoc
// 不用转义
echo &lt;span class=&quot;err&quot;&gt;&amp;lt;&amp;lt;&lt;/span&gt;&lt;span class=&quot;nt&quot;&gt;&amp;lt; DOC&lt;/span&gt;
&lt;span class=&quot;na&quot;&gt;Hello&lt;/span&gt; &lt;span class=&quot;err&quot;&gt;'&quot;&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;World&lt;/span&gt;&lt;span class=&quot;err&quot;&gt;!&lt;/span&gt; &lt;span class=&quot;err&quot;&gt;\&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;nVar:&lt;/span&gt; &lt;span class=&quot;err&quot;&gt;$&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;var&lt;/span&gt;
&lt;span class=&quot;na&quot;&gt;DOC&lt;/span&gt;&lt;span class=&quot;err&quot;&gt;;&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;

&lt;p&gt;运行结果为：&lt;/p&gt;

&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;Hello' World! \n $var
------
Hello&quot; World! 
 233
------
Hello '&quot; World! 
Var: 233
&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;</content><author><name></name></author><summary type="html">本来并不打算做服务器后台方面的事，没想到实习一不小心就被丢了一坨有关网站服务器的工作，PHP变成了天天对着发呆的东西。。。</summary></entry></feed>